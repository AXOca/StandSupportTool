<Window x:Class="StandSupportTool.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        Height="410" 
        Width="644"
        Background="#1E1E1E" Foreground="White"
        FontFamily="Segoe UI" FontWeight="Normal"
        ResizeMode="NoResize"
        Loaded="Window_Loaded">

    <!-- Window Resources -->
    <Window.Resources>
        <!-- Button Style -->
        <Style TargetType="Button">
            <Setter Property="Background" Value="#007ACC"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Margin" Value="5"/>
            <Setter Property="Padding" Value="10,5"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="border"
                        Background="{TemplateBinding Background}" 
                        BorderBrush="{TemplateBinding BorderBrush}" 
                        BorderThickness="{TemplateBinding BorderThickness}"
                        Padding="{TemplateBinding Padding}">
                            <ContentPresenter HorizontalAlignment="Center" 
                                      VerticalAlignment="Center"
                                      Content="{TemplateBinding Content}"
                                      ContentTemplate="{TemplateBinding ContentTemplate}"
                                      ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                      RecognizesAccessKey="True"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="Background" Value="#0062BE"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Update Button Style -->
        <Style x:Key="UpdateButtonStyle" TargetType="Button">
            <Setter Property="Background" Value="Red"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Margin" Value="10"/>
            <Setter Property="Padding" Value="10,5"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Width" Value="150"/>
            <Setter Property="Content" Value="Update Available"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}" 
                                BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="{TemplateBinding BorderThickness}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Content" Value="Click Me"/>
                                <Setter Property="Background" Value="DarkRed"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- TextBox Style -->
        <Style TargetType="TextBox">
            <Setter Property="Background" Value="#3C3C3C"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Margin" Value="10"/>
            <Setter Property="Padding" Value="5,2"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="BorderBrush" Value="#555555"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="BorderBrush" Value="#0062BE"/>
                </Trigger>
                <Trigger Property="IsFocused" Value="True">
                    <Setter Property="BorderBrush" Value="#0062BE"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- TextBlock Style -->
        <Style TargetType="TextBlock">
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Margin" Value="10"/>
        </Style>

        <!-- ComboBox ToggleButton Template -->
        <ControlTemplate x:Key="ComboBoxToggleButton" TargetType="ToggleButton">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition Width="20" />
                </Grid.ColumnDefinitions>
                <Border
                    x:Name="Border" 
                    Grid.ColumnSpan="2"
                    CornerRadius="2"
                    Background="#1E1E1E"
                    BorderBrush="#555555"
                    BorderThickness="1" />
                <Path 
                    x:Name="Arrow"
                    Grid.Column="1"     
                    Fill="White"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Data="M 0 0 L 4 4 L 8 0 Z"/>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter TargetName="Border" Property="Background" Value="#0062BE" />
                </Trigger>
                <Trigger Property="ToggleButton.IsChecked" Value="true">
                    <Setter TargetName="Border" Property="Background" Value="#005A9E" />
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter TargetName="Border" Property="Background" Value="#888888" />
                    <Setter TargetName="Border" Property="BorderBrush" Value="#888888" />
                    <Setter Property="Foreground" Value="#888888"/>
                    <Setter TargetName="Arrow" Property="Fill" Value="#888888" />
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <!-- ComboBox TextBox Template -->
        <ControlTemplate x:Key="ComboBoxTextBox" TargetType="TextBox">
            <Border x:Name="PART_ContentHost" Focusable="False" Background="{TemplateBinding Background}" />
        </ControlTemplate>

        <!-- ComboBox Style -->
        <Style TargetType="ComboBox">
            <Setter Property="SnapsToDevicePixels" Value="true"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
            <Setter Property="MinWidth" Value="120"/>
            <Setter Property="MinHeight" Value="20"/>
            <Setter Property="Background" Value="#1E1E1E"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="BorderBrush" Value="#555555"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBox">
                        <Grid>
                            <ToggleButton 
                                Name="ToggleButton" 
                                Template="{StaticResource ComboBoxToggleButton}" 
                                Grid.Column="2" 
                                Focusable="false"
                                IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}"
                                ClickMode="Press"
                                Background="{TemplateBinding Background}"
                                Foreground="{TemplateBinding Foreground}">
                            </ToggleButton>
                            <ContentPresenter
                                Name="ContentSite"
                                IsHitTestVisible="False" 
                                Content="{TemplateBinding SelectionBoxItem}"
                                ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                Margin="3,3,23,3"
                                VerticalAlignment="Center"
                                HorizontalAlignment="Center" />
                            <TextBox x:Name="PART_EditableTextBox"
                                Style="{x:Null}" 
                                Template="{StaticResource ComboBoxTextBox}" 
                                HorizontalAlignment="Left" 
                                VerticalAlignment="Center" 
                                Margin="3,3,23,3"
                                Focusable="True" 
                                Background="Transparent"
                                Visibility="Hidden"
                                IsReadOnly="{TemplateBinding IsReadOnly}"/>
                            <Popup 
                                Name="Popup"
                                Placement="Bottom"
                                IsOpen="{TemplateBinding IsDropDownOpen}"
                                AllowsTransparency="True" 
                                Focusable="False"
                                PopupAnimation="Slide">
                                <Grid 
                                    Name="DropDown"
                                    SnapsToDevicePixels="True"                
                                    MinWidth="{TemplateBinding ActualWidth}"
                                    MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                    <Border 
                                        x:Name="DropDownBorder"
                                        Background="#1E1E1E"
                                        BorderThickness="0"
                                        BorderBrush="Transparent"/>
                                    <ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True">
                                        <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                                    </ScrollViewer>
                                </Grid>
                            </Popup>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="HasItems" Value="false">
                                <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="#888888"/>
                            </Trigger>
                            <Trigger Property="IsGrouping" Value="true">
                                <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                            </Trigger>
                            <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="true">
                                <Setter TargetName="DropDownBorder" Property="CornerRadius" Value="4"/>
                                <Setter TargetName="DropDownBorder" Property="Margin" Value="0,2,0,0"/>
                            </Trigger>
                            <Trigger Property="IsEditable" Value="true">
                                <Setter Property="IsTabStop" Value="false"/>
                                <Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Visible"/>
                                <Setter TargetName="ContentSite" Property="Visibility" Value="Hidden"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="ToggleButton" Property="Background" Value="#0062BE"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- ComboBoxItem Style -->
        <Style TargetType="ComboBoxItem">
            <Setter Property="Background" Value="#1E1E1E"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Padding" Value="5,2"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBoxItem">
                        <Border Name="Border" Padding="2" Background="{TemplateBinding Background}">
                            <ContentPresenter Content="{TemplateBinding Content}" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsHighlighted" Value="True">
                                <Setter TargetName="Border" Property="Background" Value="#005A9E"/>
                                <Setter Property="Foreground" Value="White"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

    </Window.Resources>

    <!-- Main Grid Layout -->
    <Grid Margin="20">
        <!-- Grid Definitions -->
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>

        <!-- Header Section -->
        <StackPanel Grid.Row="0" Grid.ColumnSpan="2" Orientation="Horizontal" VerticalAlignment="Top" Background="#2D2D30" Margin="0,0,0,20">
            <TextBlock Text="Stand Support Tool" FontSize="28" FontWeight="Bold" Margin="10"/>
            <!-- Update Button -->
            <Button x:Name="UpdateButton" Style="{StaticResource UpdateButtonStyle}" Click="UpdateButton_Click"
                    Visibility="Collapsed" HorizontalAlignment="Right" VerticalAlignment="Top" Margin="10"/>
        </StackPanel>

        <!-- Left Section -->
        <StackPanel Grid.Row="1" Grid.Column="0" VerticalAlignment="Top">
            <Button Content="Full Reset" Click="FullReset_Click"/>
            <Button Content="Clear Cache" Click="ClearCache_Click"/>
        </StackPanel>

        <!-- Right Section -->
        <StackPanel Grid.Row="1" Grid.Column="1" VerticalAlignment="Top">
            <Button Content="Copy Log to Clipboard" Click="CopyLogToClipboard_Click"/>
            <Button Content="Copy Profile to Clipboard" Click="CopyProfileToClipboard_Click"/>
        </StackPanel>

        <!-- Bottom Section -->
        <Grid Grid.Row="1" Grid.ColumnSpan="2" Margin="0,81,0,0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="1*"/>
                <ColumnDefinition Width="1*"/>
                <ColumnDefinition Width="1*"/>
                <ColumnDefinition Width="1*"/>
                <ColumnDefinition Width="1*"/>
            </Grid.ColumnDefinitions>

            <Button Content="Diagnostics" Click="Diagnostics_Click" Height="28" FontSize="14" Grid.Column="0" HorizontalAlignment="Stretch"/>
            <Button Content="Hotkeys" Click="HotkeyButton_Click" Height="28" FontSize="14" Grid.Column="1" HorizontalAlignment="Stretch"/>
            <Button Content="DL Launchpad" Click="Launchpad_Click" Height="28" FontSize="14" Grid.Column="2" HorizontalAlignment="Stretch"/>
            <Button Content="Add Exclusion" Click="AddStandToExclusionsV2_Click" Height="28" FontSize="14" Grid.Column="3" HorizontalAlignment="Stretch"/>
            <Button Content="AV Checker" Click="DisplayAntivirusInfo_Click" Height="28" FontSize="14" Grid.Column="4" HorizontalAlignment="Stretch"/>
        </Grid>

        <!-- Protocol Section -->
        <Grid Grid.Row="3" Grid.ColumnSpan="2" HorizontalAlignment="Left" Margin="83,20,0,0" Width="416">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <TextBlock Text="Protocol:" VerticalAlignment="Center" Grid.Column="0" Margin="5"/>
            <ComboBox x:Name="ProtocolComboBox" SelectionChanged="ComboBox_SelectionChanged" Grid.Column="1" Margin="6,5,-179,5" Grid.ColumnSpan="2">
                <ComboBoxItem Content="SMART"/>
                <ComboBoxItem Content="OS"/>
                <ComboBoxItem Content="HTTP"/>
                <ComboBoxItem Content="UDP"/>
            </ComboBox>
            <Button Content="Switch Protocol" Click="SwitchProtocol_Click" Grid.Column="2" Margin="315,5,-305,5"/>
        </Grid>

        <!-- Activation Key Section -->
        <Grid Grid.Row="4" Grid.ColumnSpan="2" HorizontalAlignment="Left" Margin="48,10,0,0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <TextBlock Text="Activation Key:" VerticalAlignment="Center" Grid.Column="0" Margin="5"/>
            <TextBox x:Name="ActivationKeyText" Width="300" Grid.Column="1" Margin="5,5,5,5" IsReadOnly="True">
                <TextBox.Effect>
                    <BlurEffect Radius="10" />
                </TextBox.Effect>
                <TextBox.Triggers>
                    <EventTrigger RoutedEvent="MouseEnter">
                        <BeginStoryboard>
                            <Storyboard>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Effect">
                                    <DiscreteObjectKeyFrame KeyTime="0:0:0">
                                        <DiscreteObjectKeyFrame.Value>
                                            <x:Null />
                                        </DiscreteObjectKeyFrame.Value>
                                    </DiscreteObjectKeyFrame>
                                </ObjectAnimationUsingKeyFrames>
                            </Storyboard>
                        </BeginStoryboard>
                    </EventTrigger>
                    <EventTrigger RoutedEvent="MouseLeave">
                        <BeginStoryboard>
                            <Storyboard>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Effect">
                                    <DiscreteObjectKeyFrame KeyTime="0:0:0.2">
                                        <DiscreteObjectKeyFrame.Value>
                                            <BlurEffect Radius="10" />
                                        </DiscreteObjectKeyFrame.Value>
                                    </DiscreteObjectKeyFrame>
                                </ObjectAnimationUsingKeyFrames>
                            </Storyboard>
                        </BeginStoryboard>
                    </EventTrigger>
                </TextBox.Triggers>
            </TextBox>
            <Button Content="Set Key" Click="SetActivationKey_Click" Grid.Column="2" Margin="5,5,5,5"/>
        </Grid>
    </Grid>
</Window>
